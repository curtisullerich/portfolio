<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Curtis Ullerich</title>
 <link href="http://www.curtisullerich.com/atom.xml" rel="self"/>
 <link href="http://www.curtisullerich.com"/>
 <updated>2013-01-11T16:15:02-06:00</updated>
 <id>http://www.curtisullerich.com</id>
 <author>
   <name>Curtis Ullerich</name>
   <email>curtisu@iastate.edu</email>
 </author>

 
 <entry>
   <title>TBS Website Rebuild</title>
   <link href="http://www.curtisullerich.com/projects/2013/01/11/tbs_website"/>
   <updated>2013-01-11T00:00:00-06:00</updated>
   <id>http://www.curtisullerich.com/projects/2013/01/11/tbs_website</id>
   <content type="html">&lt;p&gt;I&amp;#8217;m currently the Tau Beta Sigma webmaster. During winter break I finally had time to give the website the attention it needed to standardize and clean up everything. Overall, the original design was clean, but after a couple of webmasters without previous web design experience, things had gotten a little hairy. In some places the CSS had become very hacky and most of the pages actually had invalid HTML that just happened to render nicely in the browser.&lt;/p&gt;

&lt;p&gt;I ended up redesigned the site from the ground up, re-implementing the CSS using some CSS3 goodies and fixing some irregularities.&lt;/p&gt;

&lt;p&gt;I learned a lot in the process, and am now confident that I could design a simple site from scratch on my own, which is something I wasn&amp;#8217;t confident I could do previously.&lt;/p&gt;

&lt;p&gt;I switched from the old web album library that required using an external application to generate a bunch of files to using lightbox2, with a PHP script to generate the album page given a directory name with the photos. In order to make it efficient, though, I do still generate thumbnails using imagemagick.&lt;/p&gt;

&lt;p&gt;The biggest switch was from using static member profile pages to dynamic. I created a json file that contains all of the profile information per member and two PHP files: one for the directory page and one for a profile. The directory page reads and sorts all entries, formatting them into a table and inserting links to each profile. The profile page uses URL parameters to locate the member&amp;#8217;s information in the json file and populate the page with all the information, properly excluding any missing information, and uses a default image if one is not available.&lt;/p&gt;

&lt;p&gt;Because SLOC is always the best metric for project \&amp;lt;/sarcam&amp;gt;, here are some stats:&lt;/p&gt;

&lt;p&gt;| &lt;strong&gt;lines of original source&lt;/strong&gt; | | | before | after | | php | 4117 | 595 | | css | 241 | 136 | | json | 0 | 537 | | other | 2242 | 80 | | total | 6600 | 1384 |&lt;/p&gt;

&lt;p&gt;Note that the lines of PHP are the total for PHP files, which are mostly HTML in the end. The lines also don&amp;#8217;t count the Javascript/CSS used in either the original or new photo album libraries. The &amp;#8220;other&amp;#8221; lines in the old site are due to some extra config files, txt, and html files.&lt;/p&gt;

&lt;p&gt;My new implementation of member profiles cut down on a lot of duplication, but more importantly, it standardized the pages and made it trivially easy to add new members to the site or move their profiles to different pages.&lt;/p&gt;

&lt;p&gt;After the rebuild, I was able to reduce the site&amp;#8217;s lines of code by 79%! My goal with the redesign was to make it trivially easy for me to maintain, and very easy for future webmasters to udpate and extend. I learned a lot and had some fun. All in all, a good two days. You can check out the results &lt;a href='http://music.iastate.edu/org/kkytbs/tbs/'&gt;here&lt;/a&gt;.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>RTcmix</title>
   <link href="http://www.curtisullerich.com/projects/2013/01/09/rtcmix"/>
   <updated>2013-01-09T00:00:00-06:00</updated>
   <id>http://www.curtisullerich.com/projects/2013/01/09/rtcmix</id>
   <content type="html">&lt;p&gt;During winter break I have been learning about algorithmic composition using &lt;a href='http://www.rtcmix.org/'&gt;RTcmix&lt;/a&gt; (with a Python front-end). Someone on their mailing list suggested Heinrich Taube&amp;#8217;s &amp;#8220;Notes from the Metalevel&amp;#8221; as an introductory text on the subject. Because that book uses Lisp, I translated many of the examples into Python with RTcmix for sound generation. I implemented several functions from the Common Music API as well, most notably nth-order Markov chaining. You can see the code on &lt;a href='http://www.github.com/curtisullerich/cmix'&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</content>
 </entry>
 
 
</feed>